{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "wordpressUsername": {
      "type": "string",
      "title": "Username",
      "form": true
    },
    "wordpressPassword": {
      "type": "string",
      "title": "Password",
      "form": true,
      "description": "Defaults to a random 10-character alphanumeric string if not set"
    },
    "wordpressEmail": {
      "type": "string",
      "title": "Admin email",
      "form": true
    },
    "wordpressBlogName": {
      "type": "string",
      "title": "Blog Name",
      "form": true
    },
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "form": true,
          "title": "Use a custom hostname",
          "description": "Enable the ingress resource that allows you to access the WordPress installation."
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "hidden": {
            "value": false,
            "path": "ingress/enabled"
          }
        },
        "tls": {
          "type": "boolean",
          "form": true,
          "title": "Create a TLS secret",
          "hidden": {
            "value": false,
            "path": "ingress/enabled"
          }
        },
        "tlsClusterIssuer": {
          "type": "string",
          "form": true,
          "title": "SSL Issuer",
          "description": "Generate SSL using cert-manager cluster-issuer",
          "hidden": {
            "value": false,
            "path": "ingress/enabled"
          }
        }
      }
    },
    "persistence": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "title": "Persistent Volume Size",
          "form": true,
          "render": "slider",
          "sliderMin": 1,
          "sliderMax": 100,
          "sliderUnit": "Gi"
        },
        "storageClass": {
          "type": "string",
          "title": "Persistent Volume Class",
          "description": "If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner. Note: Please use storageClassName that support ReadWriteMany (RWX) access mode if you want to enable the autoscaling",
          "form": true
        }
      }
    },
    "mariadb": {
      "type": "object",
      "title": "MariaDB Details",
      "form": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Use a new MariaDB database hosted in the cluster",
          "form": true,
          "description": "Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database switch this off and configure the external database details"
        },
        "primary": {
          "type": "object",
          "properties": {
            "persistence": {
              "type": "object",
              "properties": {
                "size": {
                  "type": "string",
                  "title": "Volume Size",
                  "form": true,
                  "hidden": {
                    "value": false,
                    "path": "mariadb/enabled"
                  },
                  "render": "slider",
                  "sliderMin": 1,
                  "sliderMax": 100,
                  "sliderUnit": "Gi"
                }
              }
            }
          }
        }
      }
    },
    "wordpressSkipInstall": {
      "type": "boolean",
      "title": "Skip WordPress Install Wizard",
      "description": "Useful if you use an external database that already contains WordPress data",
      "form": true,
      "hidden": {
        "value": true,
        "path": "mariadb/enabled"
      }
    },
    "externalDatabase": {
      "type": "object",
      "title": "External Database Details",
      "description": "If MariaDB is disabled. Use this section to specify the external database details",
      "form": true,
      "properties": {
        "host": {
          "type": "string",
          "form": true,
          "title": "Database Host",
          "hidden": "mariadb/enabled"
        },
        "user": {
          "type": "string",
          "form": true,
          "title": "Database Username",
          "hidden": "mariadb/enabled"
        },
        "password": {
          "type": "string",
          "form": true,
          "title": "Database Password",
          "hidden": "mariadb/enabled"
        },
        "database": {
          "type": "string",
          "form": true,
          "title": "Database Name",
          "hidden": "mariadb/enabled"
        },
        "port": {
          "type": "integer",
          "form": true,
          "title": "Database Port",
          "hidden": "mariadb/enabled"
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Required Resources",
      "description": "Configure resource requests",
      "form": true,
      "properties": {
        "requests": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Request",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Request",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        }
      }
    },
    "autoscaling": {
      "title": "Autoscaling Configuration",
      "description": "Scaling configuration using Horizontal Pod Autoscaler mechanism. Read more: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/",
      "type": "object",
      "form": true,
      "properties": {
          "enabled": {
              "type": "boolean",
              "title": "Enable Autoscaling",
              "form": true
          },
          "minReplicas": {
              "type": "integer",
              "title": "Minimum Replica",
              "description": "Minimum replica number of worker/webhook instance, should be > 0.",
              "form": true,
              "hidden": {
                  "value": false,
                  "path": "autoscaling/enabled"
              }
          },
          "maxReplicas": {
              "type": "integer",
              "title": "Maximum Replica",
              "description": "Maximum replica number of worker/webhook instance.",
              "form": true,
              "hidden": {
                  "value": false,
                  "path": "autoscaling/enabled"
              }
          },
          "targetCPU": {
              "type": "integer",
              "title": "Target CPU Utilization",
              "description": "The percentage number of target average CPU utilization.",
              "form": true,
              "hidden": {
                  "value": false,
                  "path": "autoscaling/enabled"
              }
          }
      }
    },
    "volumePermissions": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "form": true,
          "title": "Enable Init Containers",
          "description": "Use an init container to set required folder permissions on the data volume before mounting it in the final destination"
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Metrics",
          "description": "Prometheus Exporter / Metrics",
          "form": true
        }
      }
    }
  }
}
